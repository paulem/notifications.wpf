<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Pixelmaniac.Notifications.Controls"
    xmlns:converters="clr-namespace:Pixelmaniac.Notifications.Converters"
    xmlns:local="clr-namespace:Pixelmaniac.Notifications"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <!--  viewBox 0 0 10 10  -->
    <StreamGeometry x:Key="Geometry.Close.10" po:Freeze="True">M10,0.7L9.3,0 5,4.3 0.7,0 0,0.7 4.3,5 0,9.3 0.7,10 5,5.7 9.3,10 10,9.3 5.7,5z</StreamGeometry>

    <!--  viewBox 0 0 16 16  -->
    <StreamGeometry x:Key="Geometry.Notification.16" po:Freeze="True">
        M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8 8-3.582 8-8-3.582-8-8-8zM9 13h-2v-2h2v2zM9 9h-2v-6h2v6z
    </StreamGeometry>

    <converters:NullToBooleanConverter x:Key="NullToBooleanConverter" />

    <DataTemplate DataType="{x:Type local:NotificationContent}">
        <Border
            x:Name="Border"
            Padding="16,20,40,20"
            Background="#F2282828"
            TextElement.Foreground="White">
            <DockPanel>
                <Grid
                    x:Name="IconPlaceholder"
                    MinWidth="16"
                    MinHeight="16"
                    MaxWidth="48"
                    MaxHeight="48"
                    Margin="0,2,16,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    DockPanel.Dock="Left">
                    <Viewbox
                        x:Name="ImgV"
                        Width="16"
                        Height="16"
                        Stretch="Uniform">
                        <Path Data="{Binding VectorIcon, Mode=OneTime}" Fill="{Binding VectorIconBrush, Mode=OneTime, TargetNullValue=White}" />
                    </Viewbox>
                    <Image
                        x:Name="ImgR"
                        Width="16"
                        Height="16"
                        Source="{Binding Icon, Mode=OneTime}"
                        Stretch="Uniform"
                        Visibility="Collapsed" />
                </Grid>
                <DockPanel TextBlock.FontFamily="Segoe UI">
                    <StackPanel
                        Margin="0,5,0,0"
                        DockPanel.Dock="Bottom"
                        Opacity=".6"
                        Orientation="Horizontal"
                        TextElement.FontSize="12">
                        <TextBlock Text="{Binding AppIdentity, Mode=OneTime}" TextTrimming="CharacterEllipsis" />
                        <TextBlock
                            x:Name="Bullet"
                            Margin="3,0"
                            Text="•"
                            Visibility="Collapsed" />
                        <TextBlock
                            x:Name="AttrText"
                            Text="{Binding AttributionText, Mode=OneTime}"
                            TextTrimming="CharacterEllipsis"
                            Visibility="Collapsed" />
                    </StackPanel>
                    <TextBlock
                        DockPanel.Dock="Top"
                        FontSize="15"
                        FontWeight="Medium"
                        LineHeight="20"
                        Text="{Binding Title, Mode=OneTime}"
                        TextWrapping="Wrap" />
                    <TextBlock
                        x:Name="MessageText"
                        FontSize="15"
                        LineHeight="20"
                        Opacity=".6"
                        Text="{Binding Message, Mode=OneTime}"
                        TextWrapping="Wrap" />
                </DockPanel>
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Icon, Mode=OneTime}" Value="{x:Null}" />
                    <Condition Binding="{Binding VectorIcon, Mode=OneTime}" Value="{x:Null}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="IconPlaceholder" Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding VectorIcon, Mode=OneTime}" Value="{x:Null}">
                <Setter TargetName="ImgR" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding UseLargeIcon, Mode=OneTime}" Value="True">
                <Setter TargetName="ImgV" Property="Width" Value="48" />
                <Setter TargetName="ImgV" Property="Height" Value="48" />
                <Setter TargetName="ImgR" Property="Width" Value="48" />
                <Setter TargetName="ImgR" Property="Height" Value="48" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Message, Mode=OneTime, Converter={StaticResource NullToBooleanConverter}}" Value="False">
                <Setter TargetName="MessageText" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AttributionText, Mode=OneTime, Converter={StaticResource NullToBooleanConverter}}" Value="True">
                <Setter TargetName="Bullet" Property="Visibility" Value="Visible" />
                <Setter TargetName="AttrText" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="Notification.CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#8C8C8C" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Margin" Value="6,6,6,6" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Canvas
                            Width="10"
                            Height="10"
                            SnapsToDevicePixels="True">
                            <Path Data="{StaticResource Geometry.Close.10}" Fill="{TemplateBinding Foreground}" />
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#D9D9D9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#C3C3C3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:Notification}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="364" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="CloseButtonStyle" Value="{StaticResource Notification.CloseButtonStyle}" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="5"
                    Direction="0"
                    Opacity=".25"
                    ShadowDepth="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Notification}">
                    <Border
                        Margin="0,8,0,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Button
                                x:Name="PART_CloseButton"
                                Panel.ZIndex="1"
                                Style="{TemplateBinding CloseButtonStyle}" />
                            <ContentPresenter />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="0"
                                        To="1"
                                        Duration="0:0:.2" />
                                    <ThicknessAnimation
                                        Storyboard.TargetProperty="Margin"
                                        From="0,0,-50,0"
                                        To="0,0,0,0"
                                        Duration="0:0:.2">
                                        <ThicknessAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="controls:Notification.NotificationClosing">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation
                                        Storyboard.TargetProperty="Margin"
                                        To="0,0,-50,0"
                                        Duration="0:0:.2" />
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="1"
                                        To="0"
                                        Duration="0:0:.1" />
                                    <DoubleAnimation
                                        BeginTime="0:0:.1"
                                        Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                        To="0"
                                        Duration="0:0:.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:NotificationArea}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="16,12" />
        <Setter Property="MaxNotificationsCount" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NotificationArea}">
                    <controls:ReversibleStackPanel x:Name="PART_Items" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="Position" Value="TopLeft">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                        <Trigger Property="Position" Value="TopRight">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                        <Trigger Property="Position" Value="BottomLeft">
                            <Setter TargetName="PART_Items" Property="ReverseOrder" Value="True" />
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                        <Trigger Property="Position" Value="BottomRight">
                            <Setter TargetName="PART_Items" Property="ReverseOrder" Value="True" />
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
